def isDebug = SPLIT_MODE.toBoolean()
if (isDebug) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply plugin: 'com.jakewharton.butterknife'

android {
    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION as String

    defaultConfig {
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int
        versionCode 1
        versionName "1.0.0"

        buildConfigField "boolean", "ModuleDebug", SPLIT_MODE

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [eventBusIndex: 'com.zmsoft.ccd.module.receipt.ReceiptEventBusIndex', moduleName: project.getName()]
            }
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            if (isDebug) {
                manifest.srcFile "src/main/debug/AndroidManifest.xml"
            } else {
                manifest.srcFile "src/main/release/AndroidManifest.xml"
            }
        }
    }
    resourcePrefix 'module_receipt'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'

    debugCompile project(path:':lib.base', configuration: "debug")
    releaseCompile project(path:':lib.base', configuration: "release")
    compile project(':lib.print')
    annotationProcessor "com.jakewharton:butterknife-compiler:$BUTTER_KNIFE_VERSION"
    annotationProcessor "com.google.dagger:dagger-compiler:$DAGGER_COMPILER_VERSION"
    annotationProcessor "org.greenrobot:eventbus-annotation-processor:$EVENTBUS_ANNOTATION_PROCESSOR_VERSION"
    compile project(':lib.scan')
    compile project(':lib.pos')
    annotationProcessor "com.chiclaim:router-compiler:${MROUTER_COMPILER_VERSION}"

}
